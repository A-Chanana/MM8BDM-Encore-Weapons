#library "ENC_ACS"
#include "zcommon.acs"
#include "primo.acs"

// Barrier Wind script
script "enc_barrierwinddeflect" (int evt, int dmg, int dmgtype) EVENT
{
if(evt == GAMEEVENT_ACTOR_DAMAGED)
	{
	if(stricmp(GetActorClass(0),"BarrierWindBlocker")==0)
		{
		int BarrierOwner = GetActorProperty(0,APROP_TargetTID);
		bool redir = SetActivator(0, AAPTR_DAMAGE_INFLICTOR);
		if(redir && !CheckFlag(0, "DONTREFLECT"))
			{
			SetActorProperty(0, APROP_Species, "BarrierWindBlocker");
			SetPointer(AAPTR_MASTER, BarrierOwner);
			SetPointer(AAPTR_TRACER, 0, AAPTR_DAMAGE_SOURCE);
			delay(1);
			if(ClassifyActor(0)==ACTOR_MISSILE)
				{
				GiveInventory("BarrierWindDeflect",1);
				}
			}
		}
	}
}


//State change
script "enc_StateChange" (int state)
{
if(GetActorProperty(0,APROP_HEALTH)>0){
switch(state)
{
case 1:
SetActorState (0, "See");
break;
case 2:
SetActorState (0, "Missile");
break;
}
}
}

//Checks if the target is stunned/frozen
script "enc_StunCheck" (int type)
{
Switch(type)
	{
	Case 0:
	if(CheckInventory("TrainingBotPermaStop") ||
	CheckInventory("PowerShock") ||
	CheckInventory("ChillFreezeTimer") ||
	CheckInventory("TimeStoppedCounter"))
	{
	//printbold(s:"stunned");
	SetResultValue(1);
	}
	else{SetResultValue(0);}
	break;
	Case 1:
	if(CheckInventory("TrainingBotPermaStop") ||
	CheckInventory("ChillFreezeTimer") ||
	CheckInventory("TimeStoppedCounter"))
	{
	//printbold(s:"frozen");
	SetResultValue(1);
	}
	else{SetResultValue(0);}
	break;
	}
}


script "enc_RadiusSlow" (int radius)
{
int TID = ActivatorTID();
if(PlayerNumber() < 0){TID = ACS_NamedExecuteWithResult("core_gettarget");}

radius += 24; //24 is the player radius

while(GetActorProperty(0,APROP_Health)>0){
	for(int i = 0; i < 64; i++){
		if(!IsPlayerInteractable(i,0)){continue;}
		if(!PlayersShareTeam(TID-1000,i)){
			
			if(cubeDistance(0,i+1000,radius)){
				GiveActorInventory(i+1000,"BondingPasteSlow",1);
				PrintBold(s:"given to player ",i:i);
				}
			}
		}
	delay(1);
	}
}